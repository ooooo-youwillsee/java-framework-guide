server:
  port: 0

spring:
  application:
    name: demo-spring-boot-sharding-jdbc

  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      ds-0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://centos1:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        max-active: 16
        password: root
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      ds-1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://centos1:3306/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        max-active: 16
        password: root
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      names: ds-0,ds-1
    schema:
      name: sharding-databases-tables
    #    mode:
    #      overwrite: true # 以本地配置为主
    #      repository:
    #        props:
    #          namespace: demo_spring_boot_ds_sharding
    #          server-lists: localhost:2181
    #        type: ZooKeeper
    #      type: Cluster

    rules:
      #      encrypt:
      #        encryptors:
      #          status-encryptor:
      #            props:
      #              aes-key-value: 123456
      #            type: AES
      #        tables:
      #          t_order:
      #            columns:
      #              status:
      #                cipher-column: status
      #                encryptor-name: status-encryptor
      sharding:
        binding-tables:
          - t_order,t_order_item
        broadcast-tables: t_address
        default-database-strategy:
          standard:
            sharding-algorithm-name: database-inline
            sharding-column: user_id
        key-generators:
          snowflake:
            props:
              worker-id: 123
            type: SNOWFLAKE
        sharding-algorithms:
          database-inline:
            props:
              algorithm-expression: ds-$->{user_id % 2}
            type: INLINE
          t-order-inline:
            props:
              algorithm-expression: t_order_$->{order_id % 2}
            type: INLINE
          t-order-item-inline:
            props:
              algorithm-expression: t_order_item_$->{order_id % 2}
            type: INLINE
        tables:
          t_order:
            actual-data-nodes: ds-$->{0..1}.t_order_$->{0..1}
            key-generate-strategy:
              column: order_id
              key-generator-name: snowflake
            table-strategy:
              standard:
                sharding-algorithm-name: t-order-inline
                sharding-column: order_id
          t_order_item:
            actual-data-nodes: ds-$->{0..1}.t_order_item_$->{0..1}
            key-generate-strategy:
              column: order_item_id
              key-generator-name: snowflake
            table-strategy:
              standard:
                sharding-algorithm-name: t-order-item-inline
                sharding-column: order_id


